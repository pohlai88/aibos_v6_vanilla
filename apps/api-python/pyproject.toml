[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aibos"
version = "1.0.0"
description = "Modular accounting SaaS with Malaysian Financial Reporting Standards compliance"
authors = [
    {name = "AIbos Team", email = "dev@aibos.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "toml>=0.10.0",
    "aiohttp>=3.8.0",
    "redis>=4.5.0",
    "cryptography>=41.0.0",
    "kubernetes>=28.0.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.0.0",
    "tenacity>=8.2.0",
    "httpx>=0.25.0",
]

# NOTE: psycopg2-binary is present for raw SQL support. SQLAlchemy is also present and recommended for all new DB access. Review all direct cursor usage for security and maintainability. Document any raw SQL queries for audit.

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "flake8>=6.1.0",
    "pre-commit>=3.5.0",
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
    "toml>=0.10.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "factory-boy>=3.3.0",
    "faker>=20.0.0",
    "httpx>=0.25.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "semgrep>=1.40.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[tool.aibos]
version = "1.0.0"
description = "Comprehensive Malaysian accounting SaaS platform with MFRS compliance"
changelog = [
    "Initial release with core modules",
    "Implemented ledger and bookkeeping functionality",
    "Added MFRS compliance engine",
    "Integrated tax calculation modules",
    "Implemented security audit framework",
    "Added distributed security services",
    "Created cryptographic audit trail",
    "Implemented multi-tenant support",
    "Added subscription and billing modules",
    "Integrated Bursa Malaysia reporting",
    "Added MIA compliance validator",
    "Implemented white-label service",
    "Created workflow engine for approvals",
    "Added data location service",
    "Implemented permission service with RBAC"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["packages"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "test_*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --cov=packages --cov-report=html --cov-report=term-missing"
testpaths = ["tests", "packages/modules/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "mfrs: marks tests as MFRS compliance tests",
]

[tool.coverage.run]
source = ["packages"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.semgrep]
config = "p/security-audit"